/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |BKSP |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '  |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |RCTRL|
//                    | GUI | RSE | ENT |   | SPC | LWR | ALT |
                        bindings = <
   &kp ESC    &kp Q  &kp W      &kp E   &kp R             &kp T       &kp Y  &kp U     &kp I      &kp O    &kp P     &kp BSPC
   &kp TAB    &kp A  &kp S      &kp D   &kp F             &kp G       &kp H  &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
   &kp LSHFT  &kp Z  &kp X      &kp C   &kp V             &kp B       &kp N  &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                     &kp LGUI   &mo 2   &kp RET           &kp SPACE   &mo 1  &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
// |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |     |
// | SHFT |     |     |     |     |     |   |EséUp|Esédn|     |     |     |     |
//                    |LCTRL| MOD | ENT |   |     |     |     |
                        bindings = <
   &kp TAB    &kp N1  &kp N2  &kp N3     &kp N4   &kp N5                 &kp N6      &kp N7       &kp N8    &kp N9     &kp N0  &trans
   &trans     &trans  &trans  &trans     &trans   &trans                 &kp LEFT    &kp DOWN     &kp UP    &kp RIGHT  &trans  &trans
   &kp LSHFT  &trans  &trans  &trans     &trans   &trans                 &kp LC(UP)  &kp LC(DOWN) &trans    &trans     &trans  &trans
                              &kp LCTRL  &mo 3    &kp RET                &trans      &trans       &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ~   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  `  |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  .  |  [  |  ]  |  \  |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  ,  |  {  |  }  | "|" |
//                    |     |     |     |   | SPC | MOD |RCTRL|
                        bindings = <
   &kp TILDE  &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT            &kp CARET     &kp AMPS      &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp GRAVE
   &kp LCTRL  &trans    &trans   &trans    &trans    &trans               &kp KP_MINUS  &kp KP_EQUAL  &kp KP_DOT       &kp LBKT  &kp RBKT  &kp BSLH
   &kp LSHFT  &trans    &trans   &trans    &trans    &trans               &kp UNDER     &kp KP_PLUS   &kp KP_COMMA     &kp LBRC  &kp RBRC  &kp PIPE
                    	         &trans    &trans    &trans               &kp SPACE  &mo 3      &kp RCTRL
                        >;
                };

                mod_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     | PG ↓| PG ↑|     |     |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |ALT ←|ALT ↓|ALT ↑|ALT →|     |
// |      |     |     |     |     |     |   |     |POS ←|POS ↓|POS ↑|POS →|     |
//                    |     |     |     |   |     | MAX |     |
                        bindings = <
   &trans      &trans        &trans        &trans        &trans        &trans                 &trans                &kp PG_DN             &kp PG_UP           &trans                 &trans  &trans
   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4           &kp RA(LEFT)          &kp RA(DOWN)          &kp RA(UP)          &kp RA(RIGHT)          &trans  &trans
   &trans      &trans        &trans        &trans        &trans        &trans                 &kp LG(LC(LA(LEFT)))  &kp LG(LC(LA(DOWN)))  &kp LG(LC(LA(UP)))  &kp LG(LC(LA(RIGHT)))  &trans  &trans
                          	           &trans        &trans        &trans                 &kp LG(LC(LA(M)))     &trans                &trans
                        >;
                };
        };
};
